{"version":3,"sources":["matches.js"],"names":["Object","defineProperty","exports","value","matches","getDefaultNormalizer","matcher","text","normalizer","exact","normalizedText","toLowerCase","includes","test","trim","collapseWhitespace","replace"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBA,OAAlB;AACAF,OAAO,CAACG,oBAAR,GAA+BA,oBAA/B;;AAEA,SAASD,OAAT,CAAiBE,OAAjB,EAA0BC,IAA1B,EAAmF;AAAA,MAAnDC,UAAmD,uEAAtCH,oBAAoB,EAAkB;AAAA,MAAdI,KAAc,uEAAN,IAAM;;AACjF,MAAI,OAAOF,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AAED,MAAMG,cAAc,GAAGF,UAAU,CAACD,IAAD,CAAjC;;AAEA,MAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,WAAOG,KAAK,GAAGC,cAAc,KAAKJ,OAAtB,GAAgCI,cAAc,CAACC,WAAf,GAA6BC,QAA7B,CAAsCN,OAAO,CAACK,WAAR,EAAtC,CAA5C;AACD,GAFD,MAEO;AACL,WAAOL,OAAO,CAACO,IAAR,CAAaH,cAAb,CAAP;AACD;AACF;;AAED,SAASL,oBAAT,GAGQ;AAAA,iFAAJ,EAAI;AAAA,uBAFNS,IAEM;AAAA,MAFNA,IAEM,0BAFC,IAED;AAAA,mCADNC,kBACM;AAAA,MADNA,kBACM,sCADe,IACf;;AACN,SAAO,UAAAR,IAAI,EAAI;AACb,QAAIG,cAAc,GAAGH,IAArB;AACAG,IAAAA,cAAc,GAAGI,IAAI,GAAGJ,cAAc,CAACI,IAAf,EAAH,GAA2BJ,cAAhD;AACAA,IAAAA,cAAc,GAAGK,kBAAkB,GAAGL,cAAc,CAACM,OAAf,CAAuB,MAAvB,EAA+B,GAA/B,CAAH,GAAyCN,cAA5E;AACA,WAAOA,cAAP;AACD,GALD;AAMD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matches = matches;\nexports.getDefaultNormalizer = getDefaultNormalizer;\n\nfunction matches(matcher, text, normalizer = getDefaultNormalizer(), exact = true) {\n  if (typeof text !== 'string') {\n    return false;\n  }\n\n  const normalizedText = normalizer(text);\n\n  if (typeof matcher === 'string') {\n    return exact ? normalizedText === matcher : normalizedText.toLowerCase().includes(matcher.toLowerCase());\n  } else {\n    return matcher.test(normalizedText);\n  }\n}\n\nfunction getDefaultNormalizer({\n  trim = true,\n  collapseWhitespace = true\n} = {}) {\n  return text => {\n    let normalizedText = text;\n    normalizedText = trim ? normalizedText.trim() : normalizedText;\n    normalizedText = collapseWhitespace ? normalizedText.replace(/\\s+/g, ' ') : normalizedText;\n    return normalizedText;\n  };\n}"]}