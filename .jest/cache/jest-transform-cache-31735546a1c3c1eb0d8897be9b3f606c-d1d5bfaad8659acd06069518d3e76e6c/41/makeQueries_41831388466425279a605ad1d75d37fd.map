{"version":3,"sources":["makeQueries.js"],"names":["Object","defineProperty","exports","value","makeQueries","_waitFor","_interopRequireDefault","require","_errors","obj","__esModule","default","deprecatedKeys","extractDeprecatedWaitForOptionUsage","queryOptions","waitForOptions","timeout","interval","stackTraceError","forEach","key","console","warn","toString","queryAllByQuery","getMissingError","getMultipleError","getAllByQuery","instance","getAllFn","args","results","length","ErrorWithStack","queryByQuery","singleQueryFn","getByQuery","getFn","findAllByQuery","findAllFn","deprecatedWaitForOptions","findByQuery","findFn","getBy","getAllBy","queryBy","findBy","findAllBy"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeQueries = makeQueries;\n\nvar _waitFor = _interopRequireDefault(require(\"../waitFor\"));\n\nvar _errors = require(\"./errors\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// The WaitForOptions has been moved to the second option param of findBy* methods with the adding of TextMatchOptions\n// To make the migration easier and avoid a breaking change, keep reading this options from the first param but warn\nconst deprecatedKeys = ['timeout', 'interval', 'stackTraceError'];\n\nconst extractDeprecatedWaitForOptionUsage = queryOptions => {\n  if (queryOptions) {\n    const waitForOptions = {\n      timeout: queryOptions.timeout,\n      interval: queryOptions.interval,\n      stackTraceError: queryOptions.stackTraceError\n    };\n    deprecatedKeys.forEach(key => {\n      if (queryOptions[key]) {\n        // eslint-disable-next-line no-console\n        console.warn(`Use of option \"${key}\" in a findBy* query's second parameter, TextMatchOptions, is deprecated. Please pass this option in the third, WaitForOptions, parameter. \nExample: \n\n  findByText(text, {}, { ${key}: ${queryOptions[key].toString()} })`);\n      }\n    });\n    return waitForOptions;\n  }\n};\n\nfunction makeQueries(queryAllByQuery, getMissingError, getMultipleError) {\n  function getAllByQuery(instance) {\n    return function getAllFn(args, queryOptions) {\n      const results = queryAllByQuery(instance)(args, queryOptions);\n\n      if (results.length === 0) {\n        throw new _errors.ErrorWithStack(getMissingError(args), getAllFn);\n      }\n\n      return results;\n    };\n  }\n\n  function queryByQuery(instance) {\n    return function singleQueryFn(args, queryOptions) {\n      const results = queryAllByQuery(instance)(args, queryOptions);\n\n      if (results.length > 1) {\n        throw new _errors.ErrorWithStack(getMultipleError(args), singleQueryFn);\n      }\n\n      if (results.length === 0) {\n        return null;\n      }\n\n      return results[0];\n    };\n  }\n\n  function getByQuery(instance) {\n    return function getFn(args, queryOptions) {\n      const results = queryAllByQuery(instance)(args, queryOptions);\n\n      if (results.length > 1) {\n        throw new _errors.ErrorWithStack(getMultipleError(args), getFn);\n      }\n\n      if (results.length === 0) {\n        throw new _errors.ErrorWithStack(getMissingError(args), getFn);\n      }\n\n      return results[0];\n    };\n  }\n\n  function findAllByQuery(instance) {\n    return function findAllFn(args, queryOptions, waitForOptions = {}) {\n      const deprecatedWaitForOptions = extractDeprecatedWaitForOptionUsage(queryOptions);\n      return (0, _waitFor.default)(() => getAllByQuery(instance)(args, queryOptions), { ...deprecatedWaitForOptions,\n        ...waitForOptions\n      });\n    };\n  }\n\n  function findByQuery(instance) {\n    return function findFn(args, queryOptions, waitForOptions = {}) {\n      const deprecatedWaitForOptions = extractDeprecatedWaitForOptionUsage(queryOptions);\n      return (0, _waitFor.default)(() => getByQuery(instance)(args, queryOptions), { ...deprecatedWaitForOptions,\n        ...waitForOptions\n      });\n    };\n  }\n\n  return {\n    getBy: getByQuery,\n    getAllBy: getAllByQuery,\n    queryBy: queryByQuery,\n    findBy: findByQuery,\n    findAllBy: findAllByQuery\n  };\n}"]}