{"version":3,"sources":["makeA11yQuery.js"],"names":["Object","defineProperty","exports","value","default","_waitFor","_interopRequireDefault","require","_errors","obj","__esModule","isNodeValid","node","type","makeAliases","aliases","query","map","alias","reduce","acc","makeA11yQuery","name","queryNames","matcherFn","instance","getBy","matcher","find","props","error","ErrorWithStack","prepareErrorMessage","getAllBy","results","findAll","length","Error","queryBy","createQueryByError","queryAllBy","findBy","waitForOptions","findAllBy","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _waitFor = _interopRequireDefault(require(\"../waitFor\"));\n\nvar _errors = require(\"./errors\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isNodeValid(node) {\n  return typeof node.type === 'string';\n}\n\nfunction makeAliases(aliases, query) {\n  return aliases.map(alias => ({\n    [alias]: query\n  })).reduce((acc, query) => ({ ...acc,\n    ...query\n  }), {});\n}\n\nconst makeA11yQuery = (name, queryNames, matcherFn) => instance => {\n  const getBy = matcher => {\n    try {\n      return instance.find(node => isNodeValid(node) && matcherFn(node.props[name], matcher));\n    } catch (error) {\n      throw new _errors.ErrorWithStack((0, _errors.prepareErrorMessage)(error, name, matcher), getBy);\n    }\n  };\n\n  const getAllBy = matcher => {\n    const results = instance.findAll(node => isNodeValid(node) && matcherFn(node.props[name], matcher));\n\n    if (results.length === 0) {\n      throw new _errors.ErrorWithStack((0, _errors.prepareErrorMessage)(new Error('No instances found'), name, matcher), getAllBy);\n    }\n\n    return results;\n  };\n\n  const queryBy = matcher => {\n    try {\n      return getBy(matcher);\n    } catch (error) {\n      return (0, _errors.createQueryByError)(error, queryBy);\n    }\n  };\n\n  const queryAllBy = matcher => {\n    try {\n      return getAllBy(matcher);\n    } catch (error) {\n      return [];\n    }\n  };\n\n  const findBy = (matcher, waitForOptions) => {\n    return (0, _waitFor.default)(() => getBy(matcher), waitForOptions);\n  };\n\n  const findAllBy = (matcher, waitForOptions) => {\n    return (0, _waitFor.default)(() => getAllBy(matcher), waitForOptions);\n  };\n\n  return { ...makeAliases(queryNames.getBy, getBy),\n    ...makeAliases(queryNames.getAllBy, getAllBy),\n    ...makeAliases(queryNames.queryBy, queryBy),\n    ...makeAliases(queryNames.queryAllBy, queryAllBy),\n    ...makeAliases(queryNames.findBy, findBy),\n    ...makeAliases(queryNames.findAllBy, findAllBy)\n  };\n};\n\nvar _default = makeA11yQuery;\nexports.default = _default;"]}