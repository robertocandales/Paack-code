c132e13b2624ca9ac6d81bbdc1b5a0d9
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.matchStringValue = matchStringValue;
exports.matchArrayValue = matchArrayValue;
exports.matchObject = matchObject;
exports.a11yAPI = void 0;

var _makeA11yQuery = _interopRequireDefault(require("./makeA11yQuery"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function matchStringValue(prop, matcher) {
  if (!prop) {
    return false;
  }

  if (typeof matcher === 'string') {
    return prop === matcher;
  }

  return Boolean(prop.match(matcher));
}

function matchArrayValue(prop, matcher) {
  if (!prop || matcher.length === 0) {
    return false;
  }

  if (typeof matcher === 'string') {
    return prop.includes(matcher);
  }

  return !matcher.some(function (e) {
    return !prop.includes(e);
  });
}

function matchObject(prop, matcher) {
  return prop ? Object.keys(matcher).length !== 0 && Object.keys(prop).length !== 0 && !Object.keys(matcher).some(function (key) {
    return prop[key] !== matcher[key];
  }) : false;
}

var a11yAPI = function a11yAPI(instance) {
  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, (0, _makeA11yQuery.default)('accessibilityLabel', {
    getBy: ['getByA11yLabel', 'getByAccessibilityLabel', 'getByLabelText'],
    getAllBy: ['getAllByA11yLabel', 'getAllByAccessibilityLabel', 'getAllByLabelText'],
    queryBy: ['queryByA11yLabel', 'queryByAccessibilityLabel', 'queryByLabelText'],
    queryAllBy: ['queryAllByA11yLabel', 'queryAllByAccessibilityLabel', 'queryAllByLabelText'],
    findBy: ['findByA11yLabel', 'findByAccessibilityLabel', 'findByLabelText'],
    findAllBy: ['findAllByA11yLabel', 'findAllByAccessibilityLabel', 'findAllByLabelText']
  }, matchStringValue)(instance)), (0, _makeA11yQuery.default)('accessibilityHint', {
    getBy: ['getByA11yHint', 'getByAccessibilityHint', 'getByHintText'],
    getAllBy: ['getAllByA11yHint', 'getAllByAccessibilityHint', 'getAllByHintText'],
    queryBy: ['queryByA11yHint', 'queryByAccessibilityHint', 'queryByHintText'],
    queryAllBy: ['queryAllByA11yHint', 'queryAllByAccessibilityHint', 'queryAllByHintText'],
    findBy: ['findByA11yHint', 'findByAccessibilityHint', 'findByHintText'],
    findAllBy: ['findAllByA11yHint', 'findAllByAccessibilityHint', 'findAllByHintText']
  }, matchStringValue)(instance)), (0, _makeA11yQuery.default)('accessibilityRole', {
    getBy: ['getByA11yRole', 'getByAccessibilityRole', 'getByRole'],
    getAllBy: ['getAllByA11yRole', 'getAllByAccessibilityRole', 'getAllByRole'],
    queryBy: ['queryByA11yRole', 'queryByAccessibilityRole', 'queryByRole'],
    queryAllBy: ['queryAllByA11yRole', 'queryAllByAccessibilityRole', 'queryAllByRole'],
    findBy: ['findByA11yRole', 'findByAccessibilityRole', 'findByRole'],
    findAllBy: ['findAllByA11yRole', 'findAllByAccessibilityRole', 'findAllByRole']
  }, matchStringValue)(instance)), (0, _makeA11yQuery.default)('accessibilityStates', {
    getBy: ['getByA11yStates', 'getByAccessibilityStates'],
    getAllBy: ['getAllByA11yStates', 'getAllByAccessibilityStates'],
    queryBy: ['queryByA11yStates', 'queryByAccessibilityStates'],
    queryAllBy: ['queryAllByA11yStates', 'queryAllByAccessibilityStates'],
    findBy: ['findByA11yStates', 'findByAccessibilityStates'],
    findAllBy: ['findAllByA11yStates', 'findAllByAccessibilityStates']
  }, matchArrayValue)(instance)), (0, _makeA11yQuery.default)('accessibilityState', {
    getBy: ['getByA11yState', 'getByAccessibilityState'],
    getAllBy: ['getAllByA11yState', 'getAllByAccessibilityState'],
    queryBy: ['queryByA11yState', 'queryByAccessibilityState'],
    queryAllBy: ['queryAllByA11yState', 'queryAllByAccessibilityState'],
    findBy: ['findByA11yState', 'findByAccessibilityState'],
    findAllBy: ['findAllByA11yState', 'findAllByAccessibilityState']
  }, matchObject)(instance)), (0, _makeA11yQuery.default)('accessibilityValue', {
    getBy: ['getByA11yValue', 'getByAccessibilityValue'],
    getAllBy: ['getAllByA11yValue', 'getAllByAccessibilityValue'],
    queryBy: ['queryByA11yValue', 'queryByAccessibilityValue'],
    queryAllBy: ['queryAllByA11yValue', 'queryAllByAccessibilityValue'],
    findBy: ['findByA11yValue', 'findByAccessibilityValue'],
    findAllBy: ['findAllByA11yValue', 'findAllByAccessibilityValue']
  }, matchObject)(instance));
};

exports.a11yAPI = a11yAPI;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,