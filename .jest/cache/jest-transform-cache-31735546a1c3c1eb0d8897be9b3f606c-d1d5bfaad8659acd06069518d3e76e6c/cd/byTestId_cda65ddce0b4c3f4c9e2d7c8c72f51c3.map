{"version":3,"sources":["byTestId.js"],"names":["Object","defineProperty","exports","value","queryByTestId","queryAllByTestId","getByTestId","getAllByTestId","findByTestId","findAllByTestId","_matches","require","_makeQueries","getNodeByTestId","node","testID","options","exact","normalizer","matches","props","instance","queryAllByTestIdFn","testId","queryOptions","results","findAll","filter","element","type","getMultipleError","String","getMissingError","makeQueries","getBy","getAllBy","queryBy","findBy","findAllBy"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBF,OAAO,CAACG,gBAAR,GAA2BH,OAAO,CAACI,WAAR,GAAsBJ,OAAO,CAACK,cAAR,GAAyBL,OAAO,CAACM,YAAR,GAAuBN,OAAO,CAACO,eAAR,GAA0B,KAAK,CAAxJ;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,cAAtB;;AAEA,IAAIC,YAAY,GAAGD,OAAO,iBAA1B;;AAEA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAOC,MAAP,EAAgC;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AACtD,MACEC,KADF,GAGID,OAHJ,CACEC,KADF;AAAA,MAEEC,UAFF,GAGIF,OAHJ,CAEEE,UAFF;AAIA,SAAO,CAAC,GAAGR,QAAQ,CAACS,OAAb,EAAsBJ,MAAtB,EAA8BD,IAAI,CAACM,KAAL,CAAWL,MAAzC,EAAiDG,UAAjD,EAA6DD,KAA7D,CAAP;AACD,CAND;;AAQA,IAAMZ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAgB,QAAQ;AAAA,SAAI,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCC,YAApC,EAAkD;AACrF,QAAMC,OAAO,GAAGJ,QAAQ,CAACK,OAAT,CAAiB,UAAAZ,IAAI;AAAA,aAAID,eAAe,CAACC,IAAD,EAAOS,MAAP,EAAeC,YAAf,CAAnB;AAAA,KAArB,EAAsEG,MAAtE,CAA6E,UAAAC,OAAO;AAAA,aAAI,OAAOA,OAAO,CAACC,IAAf,KAAwB,QAA5B;AAAA,KAApF,CAAhB;AACA,WAAOJ,OAAP;AACD,GAHgC;AAAA,CAAjC;;AAKAvB,OAAO,CAACG,gBAAR,GAA2BA,gBAA3B;;AAEA,IAAMyB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAP,MAAM;AAAA,mDAA4CQ,MAAM,CAACR,MAAD,CAAlD;AAAA,CAA/B;;AAEA,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAAAT,MAAM;AAAA,qDAA8CQ,MAAM,CAACR,MAAD,CAApD;AAAA,CAA9B;;AAEA,WAMI,CAAC,GAAGX,YAAY,CAACqB,WAAjB,EAA8B5B,gBAA9B,EAAgD2B,eAAhD,EAAiEF,gBAAjE,CANJ;AAAA,IACSxB,WADT,QACE4B,KADF;AAAA,IAEY3B,cAFZ,QAEE4B,QAFF;AAAA,IAGW/B,aAHX,QAGEgC,OAHF;AAAA,IAIU5B,YAJV,QAIE6B,MAJF;AAAA,IAKa5B,eALb,QAKE6B,SALF;;AAOApC,OAAO,CAACO,eAAR,GAA0BA,eAA1B;AACAP,OAAO,CAACM,YAAR,GAAuBA,YAAvB;AACAN,OAAO,CAACE,aAAR,GAAwBA,aAAxB;AACAF,OAAO,CAACK,cAAR,GAAyBA,cAAzB;AACAL,OAAO,CAACI,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByTestId = exports.queryAllByTestId = exports.getByTestId = exports.getAllByTestId = exports.findByTestId = exports.findAllByTestId = void 0;\n\nvar _matches = require(\"../matches\");\n\nvar _makeQueries = require(\"./makeQueries\");\n\nconst getNodeByTestId = (node, testID, options = {}) => {\n  const {\n    exact,\n    normalizer\n  } = options;\n  return (0, _matches.matches)(testID, node.props.testID, normalizer, exact);\n};\n\nconst queryAllByTestId = instance => function queryAllByTestIdFn(testId, queryOptions) {\n  const results = instance.findAll(node => getNodeByTestId(node, testId, queryOptions)).filter(element => typeof element.type === 'string');\n  return results;\n};\n\nexports.queryAllByTestId = queryAllByTestId;\n\nconst getMultipleError = testId => `Found multiple elements with testID: ${String(testId)}`;\n\nconst getMissingError = testId => `Unable to find an element with testID: ${String(testId)}`;\n\nconst {\n  getBy: getByTestId,\n  getAllBy: getAllByTestId,\n  queryBy: queryByTestId,\n  findBy: findByTestId,\n  findAllBy: findAllByTestId\n} = (0, _makeQueries.makeQueries)(queryAllByTestId, getMissingError, getMultipleError);\nexports.findAllByTestId = findAllByTestId;\nexports.findByTestId = findByTestId;\nexports.queryByTestId = queryByTestId;\nexports.getAllByTestId = getAllByTestId;\nexports.getByTestId = getByTestId;"]}