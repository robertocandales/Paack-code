{"version":3,"sources":["errors.js"],"names":["Object","defineProperty","exports","value","copyStackTrace","printDeprecationWarning","throwRemovedFunctionError","throwRenamedFunctionError","createQueryByError","prepareErrorMessage","createLibraryNotSupportedError","ErrorWithStack","_prettyFormat","_interopRequireDefault","require","obj","__esModule","default","message","callsite","Error","captureStackTrace","error","name","errorMessage","replace","min","includes","target","stackTraceSource","stack","warned","functionName","console","warn","docsRef","newFunctionName"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.copyStackTrace = copyStackTrace;\nexports.printDeprecationWarning = printDeprecationWarning;\nexports.throwRemovedFunctionError = throwRemovedFunctionError;\nexports.throwRenamedFunctionError = throwRenamedFunctionError;\nexports.createQueryByError = exports.prepareErrorMessage = exports.createLibraryNotSupportedError = exports.ErrorWithStack = void 0;\n\nvar _prettyFormat = _interopRequireDefault(require(\"pretty-format\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass ErrorWithStack extends Error {\n  constructor(message, callsite) {\n    super(message);\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, callsite);\n    }\n  }\n\n}\n\nexports.ErrorWithStack = ErrorWithStack;\n\nconst createLibraryNotSupportedError = error => new Error(`Currently the only supported library to search by text is \"react-native\".\\n\\n${error.message}`);\n\nexports.createLibraryNotSupportedError = createLibraryNotSupportedError;\n\nconst prepareErrorMessage = (error, name, value) => {\n  // Strip info about custom predicate\n  let errorMessage = error.message.replace(/ matching custom predicate[^]*/gm, '');\n\n  if (name && value) {\n    errorMessage += ` with ${name} ${(0, _prettyFormat.default)(value, {\n      min: true\n    })}`;\n  }\n\n  return errorMessage;\n};\n\nexports.prepareErrorMessage = prepareErrorMessage;\n\nconst createQueryByError = (error, callsite) => {\n  if (error.message.includes('No instances found')) {\n    return null;\n  }\n\n  throw new ErrorWithStack(error.message, callsite);\n};\n\nexports.createQueryByError = createQueryByError;\n\nfunction copyStackTrace(target, stackTraceSource) {\n  target.stack = stackTraceSource.stack.replace(stackTraceSource.message, target.message);\n}\n\nconst warned = {};\n\nfunction printDeprecationWarning(functionName) {\n  if (warned[functionName]) {\n    return;\n  } // eslint-disable-next-line no-console\n\n\n  console.warn(`\n  Deprecation Warning:\n  Use of ${functionName} is not recommended and will be deleted in future versions of @testing-library/react-native.\n  `);\n  warned[functionName] = true;\n}\n\nfunction throwRemovedFunctionError(functionName, docsRef) {\n  throw new Error(`\"${functionName}\" has been removed.\\n\\nPlease consult: https://callstack.github.io/react-native-testing-library/docs/${docsRef}`);\n}\n\nfunction throwRenamedFunctionError(functionName, newFunctionName) {\n  throw new ErrorWithStack(`The \"${functionName}\" function has been renamed to \"${newFunctionName}\". Please replace all occurrences.`, throwRenamedFunctionError);\n}"]}