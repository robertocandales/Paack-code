{"version":3,"sources":["byText.js"],"names":["Object","defineProperty","exports","value","queryByText","queryAllByText","getByText","getAllByText","findByText","findAllByText","React","_interopRequireWildcard","require","_matches","_makeQueries","_filterNodeByType","_errors","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","default","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","getChildrenAsText","children","TextComponent","textContent","Children","forEach","child","_child$props","push","toString","props","filterNodeByType","length","getNodeByText","node","text","options","Text","isTextComponent","textChildren","textToTest","join","exact","normalizer","matches","error","createLibraryNotSupportedError","instance","queryAllByTextFn","queryOptions","results","findAll","getMultipleError","String","getMissingError","makeQueries","getBy","getAllBy","queryBy","findBy","findAllBy"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByText = exports.queryAllByText = exports.getByText = exports.getAllByText = exports.findByText = exports.findAllByText = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _matches = require(\"../matches\");\n\nvar _makeQueries = require(\"./makeQueries\");\n\nvar _filterNodeByType = require(\"./filterNodeByType\");\n\nvar _errors = require(\"./errors\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst getChildrenAsText = (children, TextComponent) => {\n  const textContent = [];\n  React.Children.forEach(children, child => {\n    var _child$props;\n\n    if (typeof child === 'string') {\n      textContent.push(child);\n      return;\n    }\n\n    if (typeof child === 'number') {\n      textContent.push(child.toString());\n      return;\n    }\n\n    if (child !== null && child !== void 0 && (_child$props = child.props) !== null && _child$props !== void 0 && _child$props.children) {\n      // Bail on traversing text children down the tree if current node (child)\n      // has no text. In such situations, react-test-renderer will traverse down\n      // this tree in a separate call and run this query again. As a result, the\n      // query will match the deepest text node that matches requested text.\n      if ((0, _filterNodeByType.filterNodeByType)(child, TextComponent) && textContent.length === 0) {\n        return;\n      }\n\n      getChildrenAsText(child.props.children, TextComponent);\n    }\n  });\n  return textContent;\n};\n\nconst getNodeByText = (node, text, options = {}) => {\n  try {\n    const {\n      Text\n    } = require('react-native');\n\n    const isTextComponent = (0, _filterNodeByType.filterNodeByType)(node, Text);\n\n    if (isTextComponent) {\n      const textChildren = getChildrenAsText(node.props.children, Text);\n\n      if (textChildren) {\n        const textToTest = textChildren.join('');\n        const {\n          exact,\n          normalizer\n        } = options;\n        return (0, _matches.matches)(text, textToTest, normalizer, exact);\n      }\n    }\n\n    return false;\n  } catch (error) {\n    throw (0, _errors.createLibraryNotSupportedError)(error);\n  }\n};\n\nconst queryAllByText = instance => function queryAllByTextFn(text, queryOptions) {\n  const results = instance.findAll(node => getNodeByText(node, text, queryOptions));\n  return results;\n};\n\nexports.queryAllByText = queryAllByText;\n\nconst getMultipleError = text => `Found multiple elements with text: ${String(text)}`;\n\nconst getMissingError = text => `Unable to find an element with text: ${String(text)}`;\n\nconst {\n  getBy: getByText,\n  getAllBy: getAllByText,\n  queryBy: queryByText,\n  findBy: findByText,\n  findAllBy: findAllByText\n} = (0, _makeQueries.makeQueries)(queryAllByText, getMissingError, getMultipleError);\nexports.findAllByText = findAllByText;\nexports.findByText = findByText;\nexports.queryByText = queryByText;\nexports.getAllByText = getAllByText;\nexports.getByText = getByText;"]}