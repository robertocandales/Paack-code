{"version":3,"sources":["byDisplayValue.js"],"names":["Object","defineProperty","exports","value","queryByDisplayValue","queryAllByDisplayValue","getByDisplayValue","getAllByDisplayValue","findByDisplayValue","findAllByDisplayValue","_matches","require","_makeQueries","_filterNodeByType","_errors","getTextInputNodeByDisplayValue","node","options","TextInput","exact","normalizer","nodeValue","props","undefined","defaultValue","filterNodeByType","matches","error","createLibraryNotSupportedError","instance","queryAllByDisplayValueFn","displayValue","queryOptions","findAll","getMultipleError","String","getMissingError","makeQueries","getBy","getAllBy","queryBy","findBy","findAllBy"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,mBAAR,GAA8BF,OAAO,CAACG,sBAAR,GAAiCH,OAAO,CAACI,iBAAR,GAA4BJ,OAAO,CAACK,oBAAR,GAA+BL,OAAO,CAACM,kBAAR,GAA6BN,OAAO,CAACO,qBAAR,GAAgC,KAAK,CAA5L;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,cAAtB;;AAEA,IAAIC,YAAY,GAAGD,OAAO,iBAA1B;;AAEA,IAAIE,iBAAiB,GAAGF,OAAO,sBAA/B;;AAEA,IAAIG,OAAO,GAAGH,OAAO,YAArB;;AAEA,IAAMI,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,IAAD,EAAOb,KAAP,EAA+B;AAAA,MAAjBc,OAAiB,uEAAP,EAAO;;AACpE,MAAI;AACF,mBAEIN,OAAO,CAAC,cAAD,CAFX;AAAA,QACEO,SADF,YACEA,SADF;;AAIA,QACEC,KADF,GAGIF,OAHJ,CACEE,KADF;AAAA,QAEEC,UAFF,GAGIH,OAHJ,CAEEG,UAFF;AAIA,QAAMC,SAAS,GAAGL,IAAI,CAACM,KAAL,CAAWnB,KAAX,KAAqBoB,SAArB,GAAiCP,IAAI,CAACM,KAAL,CAAWnB,KAA5C,GAAoDa,IAAI,CAACM,KAAL,CAAWE,YAAjF;AACA,WAAO,CAAC,GAAGX,iBAAiB,CAACY,gBAAtB,EAAwCT,IAAxC,EAA8CE,SAA9C,KAA4D,CAAC,GAAGR,QAAQ,CAACgB,OAAb,EAAsBvB,KAAtB,EAA6BkB,SAA7B,EAAwCD,UAAxC,EAAoDD,KAApD,CAAnE;AACD,GAXD,CAWE,OAAOQ,KAAP,EAAc;AACd,UAAM,CAAC,GAAGb,OAAO,CAACc,8BAAZ,EAA4CD,KAA5C,CAAN;AACD;AACF,CAfD;;AAiBA,IAAMtB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAwB,QAAQ;AAAA,SAAI,SAASC,wBAAT,CAAkCC,YAAlC,EAAgDC,YAAhD,EAA8D;AACvG,WAAOH,QAAQ,CAACI,OAAT,CAAiB,UAAAjB,IAAI;AAAA,aAAID,8BAA8B,CAACC,IAAD,EAAOe,YAAP,EAAqBC,YAArB,CAAlC;AAAA,KAArB,CAAP;AACD,GAFsC;AAAA,CAAvC;;AAIA9B,OAAO,CAACG,sBAAR,GAAiCA,sBAAjC;;AAEA,IAAM6B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAH,YAAY;AAAA,0DAAmDI,MAAM,CAACJ,YAAD,CAAzD;AAAA,CAArC;;AAEA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAL,YAAY;AAAA,2DAAoDI,MAAM,CAACJ,YAAD,CAA1D;AAAA,CAApC;;AAEA,WAMI,CAAC,GAAGnB,YAAY,CAACyB,WAAjB,EAA8BhC,sBAA9B,EAAsD+B,eAAtD,EAAuEF,gBAAvE,CANJ;AAAA,IACS5B,iBADT,QACEgC,KADF;AAAA,IAEY/B,oBAFZ,QAEEgC,QAFF;AAAA,IAGWnC,mBAHX,QAGEoC,OAHF;AAAA,IAIUhC,kBAJV,QAIEiC,MAJF;AAAA,IAKahC,qBALb,QAKEiC,SALF;;AAOAxC,OAAO,CAACO,qBAAR,GAAgCA,qBAAhC;AACAP,OAAO,CAACM,kBAAR,GAA6BA,kBAA7B;AACAN,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B;AACAF,OAAO,CAACK,oBAAR,GAA+BA,oBAA/B;AACAL,OAAO,CAACI,iBAAR,GAA4BA,iBAA5B","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByDisplayValue = exports.queryAllByDisplayValue = exports.getByDisplayValue = exports.getAllByDisplayValue = exports.findByDisplayValue = exports.findAllByDisplayValue = void 0;\n\nvar _matches = require(\"../matches\");\n\nvar _makeQueries = require(\"./makeQueries\");\n\nvar _filterNodeByType = require(\"./filterNodeByType\");\n\nvar _errors = require(\"./errors\");\n\nconst getTextInputNodeByDisplayValue = (node, value, options = {}) => {\n  try {\n    const {\n      TextInput\n    } = require('react-native');\n\n    const {\n      exact,\n      normalizer\n    } = options;\n    const nodeValue = node.props.value !== undefined ? node.props.value : node.props.defaultValue;\n    return (0, _filterNodeByType.filterNodeByType)(node, TextInput) && (0, _matches.matches)(value, nodeValue, normalizer, exact);\n  } catch (error) {\n    throw (0, _errors.createLibraryNotSupportedError)(error);\n  }\n};\n\nconst queryAllByDisplayValue = instance => function queryAllByDisplayValueFn(displayValue, queryOptions) {\n  return instance.findAll(node => getTextInputNodeByDisplayValue(node, displayValue, queryOptions));\n};\n\nexports.queryAllByDisplayValue = queryAllByDisplayValue;\n\nconst getMultipleError = displayValue => `Found multiple elements with display value: ${String(displayValue)} `;\n\nconst getMissingError = displayValue => `Unable to find an element with displayValue: ${String(displayValue)}`;\n\nconst {\n  getBy: getByDisplayValue,\n  getAllBy: getAllByDisplayValue,\n  queryBy: queryByDisplayValue,\n  findBy: findByDisplayValue,\n  findAllBy: findAllByDisplayValue\n} = (0, _makeQueries.makeQueries)(queryAllByDisplayValue, getMissingError, getMultipleError);\nexports.findAllByDisplayValue = findAllByDisplayValue;\nexports.findByDisplayValue = findByDisplayValue;\nexports.queryByDisplayValue = queryByDisplayValue;\nexports.getAllByDisplayValue = getAllByDisplayValue;\nexports.getByDisplayValue = getByDisplayValue;"]}